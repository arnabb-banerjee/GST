//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iGST.iGst_Svc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="iGst_Svc.IGSTService")]
    public interface IGSTService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetList_Role", ReplyAction="http://tempuri.org/IGSTService/GetList_RoleResponse")]
        System.Collections.Generic.List<BusinessObjects.RoleInfo> GetList_Role(string RoleID, string BranchId, string UserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetList_Role", ReplyAction="http://tempuri.org/IGSTService/GetList_RoleResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.RoleInfo>> GetList_RoleAsync(string RoleID, string BranchId, string UserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetDetails_Role", ReplyAction="http://tempuri.org/IGSTService/GetDetails_RoleResponse")]
        BusinessObjects.RoleInfo GetDetails_Role(string RoleID, string BranchId, string UserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetDetails_Role", ReplyAction="http://tempuri.org/IGSTService/GetDetails_RoleResponse")]
        System.Threading.Tasks.Task<BusinessObjects.RoleInfo> GetDetails_RoleAsync(string RoleID, string BranchId, string UserID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Save_Role", ReplyAction="http://tempuri.org/IGSTService/Save_RoleResponse")]
        iGST.iGst_Svc.Save_RoleResponse Save_Role(iGST.iGst_Svc.Save_RoleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Save_Role", ReplyAction="http://tempuri.org/IGSTService/Save_RoleResponse")]
        System.Threading.Tasks.Task<iGST.iGst_Svc.Save_RoleResponse> Save_RoleAsync(iGST.iGst_Svc.Save_RoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Get_Effective_Role_ForAUser", ReplyAction="http://tempuri.org/IGSTService/Get_Effective_Role_ForAUserResponse")]
        BusinessObjects.RoleInfo Get_Effective_Role_ForAUser(string BranchId, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Get_Effective_Role_ForAUser", ReplyAction="http://tempuri.org/IGSTService/Get_Effective_Role_ForAUserResponse")]
        System.Threading.Tasks.Task<BusinessObjects.RoleInfo> Get_Effective_Role_ForAUserAsync(string BranchId, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetList_TaxMaster", ReplyAction="http://tempuri.org/IGSTService/GetList_TaxMasterResponse")]
        System.Collections.Generic.List<BusinessObjects.TaxMasterInfo> GetList_TaxMaster(int mode, string TaxDefinationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetList_TaxMaster", ReplyAction="http://tempuri.org/IGSTService/GetList_TaxMasterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.TaxMasterInfo>> GetList_TaxMasterAsync(int mode, string TaxDefinationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetDetails_TaxMaster", ReplyAction="http://tempuri.org/IGSTService/GetDetails_TaxMasterResponse")]
        BusinessObjects.TaxMasterInfo GetDetails_TaxMaster(int mode, string TaxDefinationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetDetails_TaxMaster", ReplyAction="http://tempuri.org/IGSTService/GetDetails_TaxMasterResponse")]
        System.Threading.Tasks.Task<BusinessObjects.TaxMasterInfo> GetDetails_TaxMasterAsync(int mode, string TaxDefinationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Save_TaxMaster", ReplyAction="http://tempuri.org/IGSTService/Save_TaxMasterResponse")]
        iGST.iGst_Svc.Save_TaxMasterResponse Save_TaxMaster(iGST.iGst_Svc.Save_TaxMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Save_TaxMaster", ReplyAction="http://tempuri.org/IGSTService/Save_TaxMasterResponse")]
        System.Threading.Tasks.Task<iGST.iGst_Svc.Save_TaxMasterResponse> Save_TaxMasterAsync(iGST.iGst_Svc.Save_TaxMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetList_TaxCountryMap", ReplyAction="http://tempuri.org/IGSTService/GetList_TaxCountryMapResponse")]
        System.Collections.Generic.List<BusinessObjects.TaxCountryMapInfo> GetList_TaxCountryMap(int mode, string TaxDefinationID, string CountryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetList_TaxCountryMap", ReplyAction="http://tempuri.org/IGSTService/GetList_TaxCountryMapResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.TaxCountryMapInfo>> GetList_TaxCountryMapAsync(int mode, string TaxDefinationID, string CountryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetDetails_TaxCountryMap", ReplyAction="http://tempuri.org/IGSTService/GetDetails_TaxCountryMapResponse")]
        BusinessObjects.TaxCountryMapInfo GetDetails_TaxCountryMap(int mode, string TaxDefinationID, string CountryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetDetails_TaxCountryMap", ReplyAction="http://tempuri.org/IGSTService/GetDetails_TaxCountryMapResponse")]
        System.Threading.Tasks.Task<BusinessObjects.TaxCountryMapInfo> GetDetails_TaxCountryMapAsync(int mode, string TaxDefinationID, string CountryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Save_TaxCountryMap", ReplyAction="http://tempuri.org/IGSTService/Save_TaxCountryMapResponse")]
        iGST.iGst_Svc.Save_TaxCountryMapResponse Save_TaxCountryMap(iGST.iGst_Svc.Save_TaxCountryMapRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Save_TaxCountryMap", ReplyAction="http://tempuri.org/IGSTService/Save_TaxCountryMapResponse")]
        System.Threading.Tasks.Task<iGST.iGst_Svc.Save_TaxCountryMapResponse> Save_TaxCountryMapAsync(iGST.iGst_Svc.Save_TaxCountryMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetList_TaxCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/GetList_TaxCountryCategoryMapResponse")]
        System.Collections.Generic.List<BusinessObjects.TaxCountryCategoryMapInfo> GetList_TaxCountryCategoryMap(int mode, string TaxDefinationID, string CountryId, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetList_TaxCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/GetList_TaxCountryCategoryMapResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.TaxCountryCategoryMapInfo>> GetList_TaxCountryCategoryMapAsync(int mode, string TaxDefinationID, string CountryId, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetDetails_TaxCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/GetDetails_TaxCountryCategoryMapResponse")]
        BusinessObjects.TaxCountryCategoryMapInfo GetDetails_TaxCountryCategoryMap(int mode, string TaxDefinationID, string CountryId, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetDetails_TaxCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/GetDetails_TaxCountryCategoryMapResponse")]
        System.Threading.Tasks.Task<BusinessObjects.TaxCountryCategoryMapInfo> GetDetails_TaxCountryCategoryMapAsync(int mode, string TaxDefinationID, string CountryId, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Save_TaxCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/Save_TaxCountryCategoryMapResponse")]
        iGST.iGst_Svc.Save_TaxCountryCategoryMapResponse Save_TaxCountryCategoryMap(iGST.iGst_Svc.Save_TaxCountryCategoryMapRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Save_TaxCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/Save_TaxCountryCategoryMapResponse")]
        System.Threading.Tasks.Task<iGST.iGst_Svc.Save_TaxCountryCategoryMapResponse> Save_TaxCountryCategoryMapAsync(iGST.iGst_Svc.Save_TaxCountryCategoryMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetList_TaxExpenseCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/GetList_TaxExpenseCountryCategoryMapResponse")]
        System.Collections.Generic.List<BusinessObjects.TaxCountryCategoryMapInfo> GetList_TaxExpenseCountryCategoryMap(int mode, string TaxDefinationID, string CountryId, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetList_TaxExpenseCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/GetList_TaxExpenseCountryCategoryMapResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.TaxCountryCategoryMapInfo>> GetList_TaxExpenseCountryCategoryMapAsync(int mode, string TaxDefinationID, string CountryId, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetDetails_TaxExpenseCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/GetDetails_TaxExpenseCountryCategoryMapResponse")]
        BusinessObjects.TaxCountryCategoryMapInfo GetDetails_TaxExpenseCountryCategoryMap(int mode, string TaxDefinationID, string CountryId, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/GetDetails_TaxExpenseCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/GetDetails_TaxExpenseCountryCategoryMapResponse")]
        System.Threading.Tasks.Task<BusinessObjects.TaxCountryCategoryMapInfo> GetDetails_TaxExpenseCountryCategoryMapAsync(int mode, string TaxDefinationID, string CountryId, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Save_TaxExpenseCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/Save_TaxExpenseCountryCategoryMapResponse")]
        iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapResponse Save_TaxExpenseCountryCategoryMap(iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Save_TaxExpenseCountryCategoryMap", ReplyAction="http://tempuri.org/IGSTService/Save_TaxExpenseCountryCategoryMapResponse")]
        System.Threading.Tasks.Task<iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapResponse> Save_TaxExpenseCountryCategoryMapAsync(iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Get_Gst", ReplyAction="http://tempuri.org/IGSTService/Get_GstResponse")]
        BusinessObjects.GSTInfo Get_Gst(string ProductId, string ShipStateId, string OrganizationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Get_Gst", ReplyAction="http://tempuri.org/IGSTService/Get_GstResponse")]
        System.Threading.Tasks.Task<BusinessObjects.GSTInfo> Get_GstAsync(string ProductId, string ShipStateId, string OrganizationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Get_GstCategory", ReplyAction="http://tempuri.org/IGSTService/Get_GstCategoryResponse")]
        BusinessObjects.GSTInfo Get_GstCategory(string CategorytId, string ShipStateId, string OrganizationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGSTService/Get_GstCategory", ReplyAction="http://tempuri.org/IGSTService/Get_GstCategoryResponse")]
        System.Threading.Tasks.Task<BusinessObjects.GSTInfo> Get_GstCategoryAsync(string CategorytId, string ShipStateId, string OrganizationCode);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_Role", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_RoleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool isOnlyDelete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public BusinessObjects.RoleInfo obj;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public BusinessObjects.UserInfo objUserInfo;
        
        public Save_RoleRequest() {
        }
        
        public Save_RoleRequest(bool isOnlyDelete, BusinessObjects.RoleInfo obj, BusinessObjects.UserInfo objUserInfo) {
            this.isOnlyDelete = isOnlyDelete;
            this.obj = obj;
            this.objUserInfo = objUserInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_RoleResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_RoleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool Save_RoleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errormsg;
        
        public Save_RoleResponse() {
        }
        
        public Save_RoleResponse(bool Save_RoleResult, string errormsg) {
            this.Save_RoleResult = Save_RoleResult;
            this.errormsg = errormsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_TaxMaster", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_TaxMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool isOnlyDelete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public BusinessObjects.TaxMasterInfo objBankInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public BusinessObjects.UserInfo objUserInfo;
        
        public Save_TaxMasterRequest() {
        }
        
        public Save_TaxMasterRequest(bool isOnlyDelete, BusinessObjects.TaxMasterInfo objBankInfo, BusinessObjects.UserInfo objUserInfo) {
            this.isOnlyDelete = isOnlyDelete;
            this.objBankInfo = objBankInfo;
            this.objUserInfo = objUserInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_TaxMasterResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_TaxMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool Save_TaxMasterResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errormsg;
        
        public Save_TaxMasterResponse() {
        }
        
        public Save_TaxMasterResponse(bool Save_TaxMasterResult, string errormsg) {
            this.Save_TaxMasterResult = Save_TaxMasterResult;
            this.errormsg = errormsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_TaxCountryMap", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_TaxCountryMapRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool isOnlyDelete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public BusinessObjects.TaxCountryMapInfo objBankInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public BusinessObjects.UserInfo objUserInfo;
        
        public Save_TaxCountryMapRequest() {
        }
        
        public Save_TaxCountryMapRequest(bool isOnlyDelete, BusinessObjects.TaxCountryMapInfo objBankInfo, BusinessObjects.UserInfo objUserInfo) {
            this.isOnlyDelete = isOnlyDelete;
            this.objBankInfo = objBankInfo;
            this.objUserInfo = objUserInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_TaxCountryMapResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_TaxCountryMapResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool Save_TaxCountryMapResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errormsg;
        
        public Save_TaxCountryMapResponse() {
        }
        
        public Save_TaxCountryMapResponse(bool Save_TaxCountryMapResult, string errormsg) {
            this.Save_TaxCountryMapResult = Save_TaxCountryMapResult;
            this.errormsg = errormsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_TaxCountryCategoryMap", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_TaxCountryCategoryMapRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool isOnlyDelete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public BusinessObjects.TaxCountryCategoryMapInfo objBankInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public BusinessObjects.UserInfo objUserInfo;
        
        public Save_TaxCountryCategoryMapRequest() {
        }
        
        public Save_TaxCountryCategoryMapRequest(bool isOnlyDelete, BusinessObjects.TaxCountryCategoryMapInfo objBankInfo, BusinessObjects.UserInfo objUserInfo) {
            this.isOnlyDelete = isOnlyDelete;
            this.objBankInfo = objBankInfo;
            this.objUserInfo = objUserInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_TaxCountryCategoryMapResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_TaxCountryCategoryMapResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool Save_TaxCountryCategoryMapResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errormsg;
        
        public Save_TaxCountryCategoryMapResponse() {
        }
        
        public Save_TaxCountryCategoryMapResponse(bool Save_TaxCountryCategoryMapResult, string errormsg) {
            this.Save_TaxCountryCategoryMapResult = Save_TaxCountryCategoryMapResult;
            this.errormsg = errormsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_TaxExpenseCountryCategoryMap", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_TaxExpenseCountryCategoryMapRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool isOnlyDelete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public BusinessObjects.TaxCountryCategoryMapInfo objBankInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public BusinessObjects.UserInfo objUserInfo;
        
        public Save_TaxExpenseCountryCategoryMapRequest() {
        }
        
        public Save_TaxExpenseCountryCategoryMapRequest(bool isOnlyDelete, BusinessObjects.TaxCountryCategoryMapInfo objBankInfo, BusinessObjects.UserInfo objUserInfo) {
            this.isOnlyDelete = isOnlyDelete;
            this.objBankInfo = objBankInfo;
            this.objUserInfo = objUserInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_TaxExpenseCountryCategoryMapResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_TaxExpenseCountryCategoryMapResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool Save_TaxExpenseCountryCategoryMapResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errormsg;
        
        public Save_TaxExpenseCountryCategoryMapResponse() {
        }
        
        public Save_TaxExpenseCountryCategoryMapResponse(bool Save_TaxExpenseCountryCategoryMapResult, string errormsg) {
            this.Save_TaxExpenseCountryCategoryMapResult = Save_TaxExpenseCountryCategoryMapResult;
            this.errormsg = errormsg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGSTServiceChannel : iGST.iGst_Svc.IGSTService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GSTServiceClient : System.ServiceModel.ClientBase<iGST.iGst_Svc.IGSTService>, iGST.iGst_Svc.IGSTService {
        
        public GSTServiceClient() {
        }
        
        public GSTServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GSTServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GSTServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GSTServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BusinessObjects.RoleInfo> GetList_Role(string RoleID, string BranchId, string UserID, bool IsActive) {
            return base.Channel.GetList_Role(RoleID, BranchId, UserID, IsActive);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.RoleInfo>> GetList_RoleAsync(string RoleID, string BranchId, string UserID, bool IsActive) {
            return base.Channel.GetList_RoleAsync(RoleID, BranchId, UserID, IsActive);
        }
        
        public BusinessObjects.RoleInfo GetDetails_Role(string RoleID, string BranchId, string UserID, bool IsActive) {
            return base.Channel.GetDetails_Role(RoleID, BranchId, UserID, IsActive);
        }
        
        public System.Threading.Tasks.Task<BusinessObjects.RoleInfo> GetDetails_RoleAsync(string RoleID, string BranchId, string UserID, bool IsActive) {
            return base.Channel.GetDetails_RoleAsync(RoleID, BranchId, UserID, IsActive);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        iGST.iGst_Svc.Save_RoleResponse iGST.iGst_Svc.IGSTService.Save_Role(iGST.iGst_Svc.Save_RoleRequest request) {
            return base.Channel.Save_Role(request);
        }
        
        public bool Save_Role(bool isOnlyDelete, BusinessObjects.RoleInfo obj, BusinessObjects.UserInfo objUserInfo, out string errormsg) {
            iGST.iGst_Svc.Save_RoleRequest inValue = new iGST.iGst_Svc.Save_RoleRequest();
            inValue.isOnlyDelete = isOnlyDelete;
            inValue.obj = obj;
            inValue.objUserInfo = objUserInfo;
            iGST.iGst_Svc.Save_RoleResponse retVal = ((iGST.iGst_Svc.IGSTService)(this)).Save_Role(inValue);
            errormsg = retVal.errormsg;
            return retVal.Save_RoleResult;
        }
        
        public System.Threading.Tasks.Task<iGST.iGst_Svc.Save_RoleResponse> Save_RoleAsync(iGST.iGst_Svc.Save_RoleRequest request) {
            return base.Channel.Save_RoleAsync(request);
        }
        
        public BusinessObjects.RoleInfo Get_Effective_Role_ForAUser(string BranchId, string UserID) {
            return base.Channel.Get_Effective_Role_ForAUser(BranchId, UserID);
        }
        
        public System.Threading.Tasks.Task<BusinessObjects.RoleInfo> Get_Effective_Role_ForAUserAsync(string BranchId, string UserID) {
            return base.Channel.Get_Effective_Role_ForAUserAsync(BranchId, UserID);
        }
        
        public System.Collections.Generic.List<BusinessObjects.TaxMasterInfo> GetList_TaxMaster(int mode, string TaxDefinationID) {
            return base.Channel.GetList_TaxMaster(mode, TaxDefinationID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.TaxMasterInfo>> GetList_TaxMasterAsync(int mode, string TaxDefinationID) {
            return base.Channel.GetList_TaxMasterAsync(mode, TaxDefinationID);
        }
        
        public BusinessObjects.TaxMasterInfo GetDetails_TaxMaster(int mode, string TaxDefinationID) {
            return base.Channel.GetDetails_TaxMaster(mode, TaxDefinationID);
        }
        
        public System.Threading.Tasks.Task<BusinessObjects.TaxMasterInfo> GetDetails_TaxMasterAsync(int mode, string TaxDefinationID) {
            return base.Channel.GetDetails_TaxMasterAsync(mode, TaxDefinationID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        iGST.iGst_Svc.Save_TaxMasterResponse iGST.iGst_Svc.IGSTService.Save_TaxMaster(iGST.iGst_Svc.Save_TaxMasterRequest request) {
            return base.Channel.Save_TaxMaster(request);
        }
        
        public bool Save_TaxMaster(bool isOnlyDelete, BusinessObjects.TaxMasterInfo objBankInfo, BusinessObjects.UserInfo objUserInfo, out string errormsg) {
            iGST.iGst_Svc.Save_TaxMasterRequest inValue = new iGST.iGst_Svc.Save_TaxMasterRequest();
            inValue.isOnlyDelete = isOnlyDelete;
            inValue.objBankInfo = objBankInfo;
            inValue.objUserInfo = objUserInfo;
            iGST.iGst_Svc.Save_TaxMasterResponse retVal = ((iGST.iGst_Svc.IGSTService)(this)).Save_TaxMaster(inValue);
            errormsg = retVal.errormsg;
            return retVal.Save_TaxMasterResult;
        }
        
        public System.Threading.Tasks.Task<iGST.iGst_Svc.Save_TaxMasterResponse> Save_TaxMasterAsync(iGST.iGst_Svc.Save_TaxMasterRequest request) {
            return base.Channel.Save_TaxMasterAsync(request);
        }
        
        public System.Collections.Generic.List<BusinessObjects.TaxCountryMapInfo> GetList_TaxCountryMap(int mode, string TaxDefinationID, string CountryId) {
            return base.Channel.GetList_TaxCountryMap(mode, TaxDefinationID, CountryId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.TaxCountryMapInfo>> GetList_TaxCountryMapAsync(int mode, string TaxDefinationID, string CountryId) {
            return base.Channel.GetList_TaxCountryMapAsync(mode, TaxDefinationID, CountryId);
        }
        
        public BusinessObjects.TaxCountryMapInfo GetDetails_TaxCountryMap(int mode, string TaxDefinationID, string CountryId) {
            return base.Channel.GetDetails_TaxCountryMap(mode, TaxDefinationID, CountryId);
        }
        
        public System.Threading.Tasks.Task<BusinessObjects.TaxCountryMapInfo> GetDetails_TaxCountryMapAsync(int mode, string TaxDefinationID, string CountryId) {
            return base.Channel.GetDetails_TaxCountryMapAsync(mode, TaxDefinationID, CountryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        iGST.iGst_Svc.Save_TaxCountryMapResponse iGST.iGst_Svc.IGSTService.Save_TaxCountryMap(iGST.iGst_Svc.Save_TaxCountryMapRequest request) {
            return base.Channel.Save_TaxCountryMap(request);
        }
        
        public bool Save_TaxCountryMap(bool isOnlyDelete, BusinessObjects.TaxCountryMapInfo objBankInfo, BusinessObjects.UserInfo objUserInfo, out string errormsg) {
            iGST.iGst_Svc.Save_TaxCountryMapRequest inValue = new iGST.iGst_Svc.Save_TaxCountryMapRequest();
            inValue.isOnlyDelete = isOnlyDelete;
            inValue.objBankInfo = objBankInfo;
            inValue.objUserInfo = objUserInfo;
            iGST.iGst_Svc.Save_TaxCountryMapResponse retVal = ((iGST.iGst_Svc.IGSTService)(this)).Save_TaxCountryMap(inValue);
            errormsg = retVal.errormsg;
            return retVal.Save_TaxCountryMapResult;
        }
        
        public System.Threading.Tasks.Task<iGST.iGst_Svc.Save_TaxCountryMapResponse> Save_TaxCountryMapAsync(iGST.iGst_Svc.Save_TaxCountryMapRequest request) {
            return base.Channel.Save_TaxCountryMapAsync(request);
        }
        
        public System.Collections.Generic.List<BusinessObjects.TaxCountryCategoryMapInfo> GetList_TaxCountryCategoryMap(int mode, string TaxDefinationID, string CountryId, string CategoryId) {
            return base.Channel.GetList_TaxCountryCategoryMap(mode, TaxDefinationID, CountryId, CategoryId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.TaxCountryCategoryMapInfo>> GetList_TaxCountryCategoryMapAsync(int mode, string TaxDefinationID, string CountryId, string CategoryId) {
            return base.Channel.GetList_TaxCountryCategoryMapAsync(mode, TaxDefinationID, CountryId, CategoryId);
        }
        
        public BusinessObjects.TaxCountryCategoryMapInfo GetDetails_TaxCountryCategoryMap(int mode, string TaxDefinationID, string CountryId, string CategoryId) {
            return base.Channel.GetDetails_TaxCountryCategoryMap(mode, TaxDefinationID, CountryId, CategoryId);
        }
        
        public System.Threading.Tasks.Task<BusinessObjects.TaxCountryCategoryMapInfo> GetDetails_TaxCountryCategoryMapAsync(int mode, string TaxDefinationID, string CountryId, string CategoryId) {
            return base.Channel.GetDetails_TaxCountryCategoryMapAsync(mode, TaxDefinationID, CountryId, CategoryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        iGST.iGst_Svc.Save_TaxCountryCategoryMapResponse iGST.iGst_Svc.IGSTService.Save_TaxCountryCategoryMap(iGST.iGst_Svc.Save_TaxCountryCategoryMapRequest request) {
            return base.Channel.Save_TaxCountryCategoryMap(request);
        }
        
        public bool Save_TaxCountryCategoryMap(bool isOnlyDelete, BusinessObjects.TaxCountryCategoryMapInfo objBankInfo, BusinessObjects.UserInfo objUserInfo, out string errormsg) {
            iGST.iGst_Svc.Save_TaxCountryCategoryMapRequest inValue = new iGST.iGst_Svc.Save_TaxCountryCategoryMapRequest();
            inValue.isOnlyDelete = isOnlyDelete;
            inValue.objBankInfo = objBankInfo;
            inValue.objUserInfo = objUserInfo;
            iGST.iGst_Svc.Save_TaxCountryCategoryMapResponse retVal = ((iGST.iGst_Svc.IGSTService)(this)).Save_TaxCountryCategoryMap(inValue);
            errormsg = retVal.errormsg;
            return retVal.Save_TaxCountryCategoryMapResult;
        }
        
        public System.Threading.Tasks.Task<iGST.iGst_Svc.Save_TaxCountryCategoryMapResponse> Save_TaxCountryCategoryMapAsync(iGST.iGst_Svc.Save_TaxCountryCategoryMapRequest request) {
            return base.Channel.Save_TaxCountryCategoryMapAsync(request);
        }
        
        public System.Collections.Generic.List<BusinessObjects.TaxCountryCategoryMapInfo> GetList_TaxExpenseCountryCategoryMap(int mode, string TaxDefinationID, string CountryId, string CategoryId) {
            return base.Channel.GetList_TaxExpenseCountryCategoryMap(mode, TaxDefinationID, CountryId, CategoryId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessObjects.TaxCountryCategoryMapInfo>> GetList_TaxExpenseCountryCategoryMapAsync(int mode, string TaxDefinationID, string CountryId, string CategoryId) {
            return base.Channel.GetList_TaxExpenseCountryCategoryMapAsync(mode, TaxDefinationID, CountryId, CategoryId);
        }
        
        public BusinessObjects.TaxCountryCategoryMapInfo GetDetails_TaxExpenseCountryCategoryMap(int mode, string TaxDefinationID, string CountryId, string CategoryId) {
            return base.Channel.GetDetails_TaxExpenseCountryCategoryMap(mode, TaxDefinationID, CountryId, CategoryId);
        }
        
        public System.Threading.Tasks.Task<BusinessObjects.TaxCountryCategoryMapInfo> GetDetails_TaxExpenseCountryCategoryMapAsync(int mode, string TaxDefinationID, string CountryId, string CategoryId) {
            return base.Channel.GetDetails_TaxExpenseCountryCategoryMapAsync(mode, TaxDefinationID, CountryId, CategoryId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapResponse iGST.iGst_Svc.IGSTService.Save_TaxExpenseCountryCategoryMap(iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapRequest request) {
            return base.Channel.Save_TaxExpenseCountryCategoryMap(request);
        }
        
        public bool Save_TaxExpenseCountryCategoryMap(bool isOnlyDelete, BusinessObjects.TaxCountryCategoryMapInfo objBankInfo, BusinessObjects.UserInfo objUserInfo, out string errormsg) {
            iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapRequest inValue = new iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapRequest();
            inValue.isOnlyDelete = isOnlyDelete;
            inValue.objBankInfo = objBankInfo;
            inValue.objUserInfo = objUserInfo;
            iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapResponse retVal = ((iGST.iGst_Svc.IGSTService)(this)).Save_TaxExpenseCountryCategoryMap(inValue);
            errormsg = retVal.errormsg;
            return retVal.Save_TaxExpenseCountryCategoryMapResult;
        }
        
        public System.Threading.Tasks.Task<iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapResponse> Save_TaxExpenseCountryCategoryMapAsync(iGST.iGst_Svc.Save_TaxExpenseCountryCategoryMapRequest request) {
            return base.Channel.Save_TaxExpenseCountryCategoryMapAsync(request);
        }
        
        public BusinessObjects.GSTInfo Get_Gst(string ProductId, string ShipStateId, string OrganizationCode) {
            return base.Channel.Get_Gst(ProductId, ShipStateId, OrganizationCode);
        }
        
        public System.Threading.Tasks.Task<BusinessObjects.GSTInfo> Get_GstAsync(string ProductId, string ShipStateId, string OrganizationCode) {
            return base.Channel.Get_GstAsync(ProductId, ShipStateId, OrganizationCode);
        }
        
        public BusinessObjects.GSTInfo Get_GstCategory(string CategorytId, string ShipStateId, string OrganizationCode) {
            return base.Channel.Get_GstCategory(CategorytId, ShipStateId, OrganizationCode);
        }
        
        public System.Threading.Tasks.Task<BusinessObjects.GSTInfo> Get_GstCategoryAsync(string CategorytId, string ShipStateId, string OrganizationCode) {
            return base.Channel.Get_GstCategoryAsync(CategorytId, ShipStateId, OrganizationCode);
        }
    }
}
